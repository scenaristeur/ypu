{"version":3,"file":"js/synced_store.eccf22cf.js","mappings":"6LACOA,GAAG,U,GACNC,EAAAA,EAAAA,GAAqB,UAAjB,gBAAY,G,GAGhBA,EAAAA,EAAAA,GAAiB,UAAb,YAAQ,G,GAGRC,MAAM,a,GAEDA,MAAM,Q,kFATjBC,EAAAA,EAAAA,IAkBM,MAlBNC,EAkBM,CAjBJC,GAAqB,aACrB,QAAGC,EAAAA,QAAS,IACZ,WAAyC,UAAhCC,QAAK,oBAAED,EAAAA,SAAAA,EAAAA,WAAAA,KAAS,YAAO,WAAUL,EAAAA,EAAAA,GAAiD,UAAxCM,QAAK,eAAED,EAAAA,eAAc,cACxEE,GAAiB,SACjBP,EAAAA,EAAAA,GAC2B,SADpBC,MAAM,WAAWO,UAAA,GAAUC,aAAa,MAAMC,YAAY,yB,qCAAkCC,EAAAA,QAAO,GACvGC,QAAK,8BAAQP,EAAAA,SAAAA,EAAAA,WAAAA,IAAO,a,iBAD4EM,EAAAA,YAEnGX,EAAAA,EAAAA,GAUK,KAVLa,EAUK,gBATHX,EAAAA,EAAAA,IAQKY,EAAAA,GAAAA,MAAAA,EAAAA,EAAAA,IARmBH,EAAAA,MAAMI,OAAK,CAAvBC,EAAMC,M,WAAlBf,EAAAA,EAAAA,IAQK,MARgCD,MAAM,OAAQiB,IAAKD,G,EACtDjB,EAAAA,EAAAA,GAMM,MANNmB,EAMM,EALJnB,EAAAA,EAAAA,GAGQ,wBAFNA,EAAAA,EAAAA,GAAiE,SAA1DC,MAAM,SAASmB,KAAK,W,yBAAoBJ,EAAKK,UAAS,G,iBAAdL,EAAKK,cAAS,QAAI,KACjE,QAAGL,EAAKM,OAAK,MAEftB,EAAAA,EAAAA,GAAiE,UAAzDC,MAAM,UAAWK,QAAK,GAAED,EAAAA,WAAWW,IAAO,SAAM,Y,0CCN3D,MAAMO,GAAQ,QAAY,CAAER,MAAO,GAAIS,SAAU,QAGlDC,GAAM,QAAUF,GAMhBG,EAAa,IAAI,KAAkB,uBAAwB,kBAAmBD,GACvEE,EAAa,IAAMD,EAAWC,aAC9BC,EAAU,IAAMF,EAAWE,U,eDUxCC,EAAAA,EAAAA,IAAkBC,GAGlB,OACEC,KAAM,cACNC,OACE,MAAO,CACLT,MAAK,EACLU,QAAS,GAEb,EACAC,QAAS,CACPC,UACE,MAAMC,EAAQC,KAAKJ,SAAWI,KAAKJ,QAAQK,OACtCF,IAGLC,KAAKd,MAAMR,MAAMwB,KAAK,CACpBjB,MAAOc,EACPf,WAAW,IAEbgB,KAAKJ,QAAU,GACjB,EACAO,WAAWxB,GACTqB,KAAKd,MAAMR,MAAM0B,OAAOJ,KAAKd,MAAMR,MAAM2B,QAAQ1B,GAAO,EAC1D,EACAY,UACEA,GACF,EACAD,aACEA,GACF,GAEFgB,SAAU,CACRC,SACE,OAAOP,KAAKQ,OAAOC,MAAMC,IAAIH,MAC/B,I,QE3DJ,MAAMI,GAA2B,OAAgB,EAAQ,CAAC,CAAC,SAASC,KAEpE,O","sources":["webpack://ypu/./src/views/SyncedStore.vue","webpack://ypu/./src/views/store.ts","webpack://ypu/./src/views/SyncedStore.vue?35b2"],"sourcesContent":["<template>\n  <div id=\"synced\">\n    <h1>Synced Store</h1>\n    {{ status }}\n    <button @click=\"connect\">Connect</button> <button @click=\"disconnect()\">Disconnect</button>\n    <h1>Todo Vue</h1>\n    <input class=\"new-todo\" autofocus autocomplete=\"off\" placeholder=\"What needs to be done?\" v-model=\"newTodo\"\n      @keyup.enter=\"addTodo\" />\n    <ul class=\"todo-list\">\n      <li v-for=\"(todo, i) in store.todos\" class=\"todo\" :key=\"i\">\n        <div class=\"view\">\n          <label>\n            <input class=\"toggle\" type=\"checkbox\" v-model=\"todo.completed\" />\n            {{ todo.title }}\n          </label>\n          <button class=\"destroy\" @click=\"removeTodo(todo)\">Delete</button>\n        </div>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\n\nimport { store, connect, disconnect } from \"./store.ts\";\n// import { ref } from \"vue\";\nimport * as Vue from \"vue\";\nimport { enableVueBindings } from \"@syncedstore/core\";\n\n// make SyncedStore use Vuejs internally\nenableVueBindings(Vue);\n\n\nexport default {\n  name: \"SyncedStore\",\n  data() {\n    return {\n      store, // Put the store on the data() of the component\n      newTodo: \"\"\n    };\n  },\n  methods: {\n    addTodo() {\n      const value = this.newTodo && this.newTodo.trim();\n      if (!value) {\n        return;\n      }\n      this.store.todos.push({\n        title: value,\n        completed: false,\n      });\n      this.newTodo = \"\";\n    },\n    removeTodo(todo) {\n      this.store.todos.splice(this.store.todos.indexOf(todo), 1);\n    },\n    connect() {\n      connect()\n    },\n    disconnect() {\n      disconnect()\n    }\n  },\n  computed: {\n    status() {\n      return this.$store.state.ypu.status\n    }\n  }\n}\n</script>\n\n<style>\n#synced {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n}\n\nul {\n  text-align: left;\n}\n\nli button {\n  margin-left: 1em;\n}\n</style>","import { syncedStore, getYjsDoc } from \"@syncedstore/core\";\n// import { WebrtcProvider } from \"y-webrtc\";\nimport { WebsocketProvider } from \"y-websocket\";\n\n// (optional, define types for TypeScript)\n//type Todo = { completed: boolean, title: string };\n\n// Create your SyncedStore store\n// export const store = syncedStore({ todos: [] as Todo[], fragment: \"xml\" });\nexport const store = syncedStore({ todos: [], fragment: \"xml\" });\n\n// Create a document that syncs automatically using Y-WebRTC\nconst doc = getYjsDoc(store);\n// export const webrtcProvider = new WebrtcProvider(\"syncedstore-todos\", doc);\n\n// export const disconnect = () => webrtcProvider.disconnect();\n// export const connect = () => webrtcProvider.connect();\n\nconst wsProvider = new WebsocketProvider(\"wss://ypu.glitch.me/\", \"syncedstore-ypu\", doc);\nexport const disconnect = () => wsProvider.disconnect();\nexport const connect = () => wsProvider.connect();\n\n","import { render } from \"./SyncedStore.vue?vue&type=template&id=988fc188\"\nimport script from \"./SyncedStore.vue?vue&type=script&lang=js\"\nexport * from \"./SyncedStore.vue?vue&type=script&lang=js\"\n\nimport \"./SyncedStore.vue?vue&type=style&index=0&id=988fc188&lang=css\"\n\nimport exportComponent from \"/home/smag/dev/ypu/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["id","_createElementVNode","class","_createElementBlock","_hoisted_1","_hoisted_2","$options","onClick","_hoisted_3","autofocus","autocomplete","placeholder","$data","onKeyup","_hoisted_4","_Fragment","todos","todo","i","key","_hoisted_5","type","completed","title","store","fragment","doc","wsProvider","disconnect","connect","enableVueBindings","Vue","name","data","newTodo","methods","addTodo","value","this","trim","push","removeTodo","splice","indexOf","computed","status","$store","state","ypu","__exports__","render"],"sourceRoot":""}